import { Context, Markup } from "telegraf";
import { message } from "telegraf/filters";
import { Update } from "telegraf/typings/core/types/typegram";
import { HyperliquidService } from "./hyperliquid.service"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å –∏ –Ω–∞—à –≥–ª–∞–≤–Ω—ã–π —Ç–∏–ø

// –ü—Å–µ–≤–¥–æ–Ω–∏–º —Ç–∏–ø–∞ –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
type ReplyKeyboard = ReturnType<typeof Markup.keyboard>;

export class HyperliquidController {
    constructor(
        private hyperliquidService: HyperliquidService,
        private userState: Map<number, string>
    ) { }


    // –ú–µ—Ç–æ–¥ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∞–¥—Ä–µ—Å–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    // public onCheckAccountRequest(ctx: Context, mainMenuKeyboard: ReplyKeyboard): void {
    //     const userId = ctx.from!.id;
    //     this.userState.set(userId, 'awaiting_wallet_address');
    //     ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à ETH –∞–¥—Ä–µ—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 0x...):', mainMenuKeyboard);
    // }

    // –ú–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –∞–¥—Ä–µ—Å–∞
    public async onWalletAddressReceived(ctx: Context<Update.MessageUpdate>, mainMenuKeyboard: ReplyKeyboard): Promise<void> {
        if (!ctx.has(message("text"))) return;

        const userId = ctx.from.id;
        const walletAddress = ctx.message.text.trim();
        const userAddress = process.env.ACCOUNT_HYPERLIQUID_ETH;
        if (!userAddress) {
            console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è ACCOUNT_HYPERLIQUID_ETH –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ .env');
            await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏. –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞.', mainMenuKeyboard);
            return;
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –∞–¥—Ä–µ—Å–∞
        if (!/^0x[a-fA-F0-9]{40}$/.test(userAddress)) {
            await ctx.reply('‚ùå –ê–¥—Ä–µ—Å –Ω–µ –ø–æ—Ö–æ–∂ –Ω–∞ –≤–∞–ª–∏–¥–Ω—ã–π ETH-–∫–æ—à–µ–ª–µ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', mainMenuKeyboard);
            return;
        }

        this.userState.delete(userId);
        await ctx.reply('‚è≥ –ü–æ–ª—É—á–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥...');

        try {

            const summary = await this.hyperliquidService.getDetailedPositions()
            console.log(summary)
            // // 1. –í—ã–∑—ã–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å –∏ –ø–æ–ª—É—á–∞–µ–º —á–∏—Å—Ç—ã–π –û–ë–™–ï–ö–¢ –° –î–ê–ù–ù–´–ú–ò
            // const summary: FullAccountSummary = await this.hyperliquidService.getAccountSummary(userAddress);

            // // 2. –°—Ç—Ä–æ–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            // let message = `<b>üìä –í–∞—à –∞–∫–∫–∞—É–Ω—Ç Hyperliquid</b>\n\n`;
            // message += `üí∞ <b>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:</b> <code>$${summary.accountValue.toFixed(2)}</code>\n`;
            // message += `üíº <b>Margin Used:</b> <code>$${summary.marginUsed.toFixed(2)}</code>\n`;
            // message += `Êù† <b>–ü–ª–µ—á–æ (–æ–±—â–µ–µ):</b> <code>${summary.leverage.toFixed(5)}x</code>\n\n`;
            // message += `<b>–û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏</b>\n`;

            // if (summary.openPositions.length === 0) {
            //     message += "<i>–û—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π –Ω–µ—Ç.</i>";
            // } else {
            //     let table = '';
            //     // –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—É—é –º–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
            //     for (const pos of summary.openPositions) {
            //         const sideEmoji = pos.side === 'Long' ? 'üü¢' : 'üî¥';
            //         const coinText = `${sideEmoji} ${pos.coin}`;
            //         const notionalText = `$${pos.notionalValue.toFixed(2)}`;
            //         const fundingText = `${pos.fundingRate.toFixed(4)}%`;

            //         table += `${coinText.padEnd(12)} ${notionalText.padEnd(15)} ${fundingText}\n`;
            //     }
            //     message += `<pre>${table}</pre>`;
            // }

            // // 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–æ—Ç–æ–≤–æ–µ HTML-—Å–æ–æ–±—â–µ–Ω–∏–µ
            // await ctx.replyWithHTML(message, mainMenuKeyboard);

        } catch (error) {
            // 4. –õ–æ–≤–∏–º –ª—é–±—É—é –æ—à–∏–±–∫—É –∏–∑ —Å–µ—Ä–≤–∏—Å–∞ –∏ —Å–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –≤–µ–∂–ª–∏–≤–æ–π —Ñ–æ—Ä–º–µ
            console.error('–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ Hyperliquid –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞–¥—Ä–µ—Å–∞:', error);
            await ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∞–¥—Ä–µ—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω –∏ –∏–º–µ–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ Hyperliquid, –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', mainMenuKeyboard);
        }
    }
}