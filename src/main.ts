import { Markup } from 'telegraf';
import { bot } from './core/bot';

import { HyperliquidController } from './modules/hyperliquid/hyperliquid.controller';
import { HyperliquidService } from './modules/hyperliquid/hyperliquid.service';
import { CalculatorController } from './modules/calculator/calculator.controller';
import { CalculatorService } from './modules/calculator/calculator.service';
import { BinanceController } from './modules/binance/binance.controller';
import { BinanceService } from './modules/binance/binance.service';
import { ParadexController } from './modules/paradex/paradex.controller';
import { ParadexService } from './modules/paradex/paradex.service';
import { LighterController } from './modules/lighter/lighter.controller';
import { LighterService } from './modules/lighter/lighter.service';
import { NotificationService } from './modules/notifications/notification.service';
import { NotificationController } from './modules/notifications/notification.controller';
import { ExtendedController } from './modules/extended/extended.controller';
import { ExtendedService } from './modules/extended/extended.service';
import { RankingService } from './modules/ranking/ranking.service';
import { RankingController } from './modules/ranking/ranking.controller';
import { SummaryController } from './modules/summary/summary.controller'
import { SummaryService } from './modules/summary/summary.service';


import { message } from 'telegraf/filters';

// --- –ò–ó–ú–ï–ù–ï–ù–û: –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π ---
const mainMenuKeyboard = Markup.keyboard([
    ['üîé HL', '‚úñÔ∏è –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä', 'Extended'],
    ['BIN', 'Paradex', 'Lighter'],
    ['üîî –í–∫–ª—é—á–∏—Ç—å Alert', 'üîï –í—ã–∫–ª—é—á–∏—Ç—å Alert'],
    ['‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞–Ω–≥–∏', '–ü–ª–µ—á–∏ –∏ –≠–∫–≤–∏—Ç–∏']
]).resize();

const userState = new Map<number, string>();

async function start() {
    // --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –∏ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ ---
    const hyperliquidService = new HyperliquidService();
    const hyperliquidController = new HyperliquidController(hyperliquidService, userState);

    const calculatorService = new CalculatorService();
    const calculatorController = new CalculatorController(calculatorService, userState);

    const binanceService = new BinanceService();
    const binanceController = new BinanceController(binanceService, userState);

    const paradexService = new ParadexService();
    const paradexController = new ParadexController(paradexService, userState);

    const lighterService = new LighterService();
    const lighterController = new LighterController(lighterService, userState);

    const notificationService = new NotificationService(bot);
    const notificationController = new NotificationController(notificationService);

    const extendedService = new ExtendedService();
    const extendedController = new ExtendedController(extendedService, userState);

    const rankingService = new RankingService();
    const rankingController = new RankingController(rankingService, userState);

    const summaryService = new SummaryService(
        binanceService,
        hyperliquidService,
        paradexService,
        lighterService,
        extendedService
    );
    const summaryController = new SummaryController(summaryService);

    // --- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã /start ---
    bot.start((ctx) => {
        // –ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        userState.delete(ctx.from.id);
        ctx.reply(
            '–ü—Ä–∏–≤–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –≤–Ω–∏–∑—É.',
            mainMenuKeyboard
        );
    });

    // --- –û–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫-–º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä –¥–ª—è –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ---
    bot.on(message('text'), (ctx) => {
        const userId = ctx.from.id;
        const text = ctx.message.text;
        const currentState = userState.get(userId);

        // --- –ò–ó–ú–ï–ù–ï–ù–û: –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫ –≤ –ø—Ä–æ–≤–µ—Ä–∫—É ---
        const mainMenuCommands = ['üîé HL', '‚úñÔ∏è –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä', 'BIN', 'Paradex', 'Lighter', 'üîî –í–∫–ª—é—á–∏—Ç—å Alert', 'üîï –í—ã–∫–ª—é—á–∏—Ç—å Alert', 'Extended', '‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞–Ω–≥–∏', '–ü–ª–µ—á–∏ –∏ –≠–∫–≤–∏—Ç–∏'];

        if (mainMenuCommands.includes(text)) {
            userState.delete(userId); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ!

            switch (text) {
                case 'üîé HL':
                    hyperliquidController.onWalletAddressReceived(ctx, mainMenuKeyboard);
                    return;

                case '‚úñÔ∏è –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä':
                    calculatorController.onMultiplyRequest(ctx, mainMenuKeyboard);
                    return;

                case 'BIN':
                    binanceController.onEquityRequest(ctx, mainMenuKeyboard);
                    return;
                case 'Paradex':
                    paradexController.onAccountRequest(ctx, mainMenuKeyboard);
                    return;

                case 'Lighter':
                    lighterController.onAccountRequestL(ctx, mainMenuKeyboard);
                    return;

                case 'Extended':
                    extendedController.onAccountRequest(ctx, mainMenuKeyboard);
                    return;

                case 'üîî –í–∫–ª—é—á–∏—Ç—å Alert':
                    notificationController.startMonitoring(ctx);
                    return;

                case 'üîï –í—ã–∫–ª—é—á–∏—Ç—å Alert':
                    notificationController.stopMonitoring(ctx);
                    return;

                case '‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞–Ω–≥–∏':
                    return rankingController.onUpdateRanksRequest(ctx);

                case '–ü–ª–µ—á–∏ –∏ –≠–∫–≤–∏—Ç–∏':
                    return summaryController.sendSummaryTable(ctx);

            }
        }

        // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –∫–æ–º–∞–Ω–¥–∞ –∏–∑ –º–µ–Ω—é, —Ç–æ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        // if (currentState === 'awaiting_wallet_address') {
        //     hyperliquidController.onWalletAddressReceived(ctx, mainMenuKeyboard);
        //     return;
        // }
        if (currentState === 'awaiting_multiplication_numbers') {
            calculatorController.onNumbersReceived(ctx, mainMenuKeyboard);
            return;
        }
        if (currentState === 'awaiting_ranks_json') { // –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            return rankingController.onRanksJsonReceived(ctx);
        }

        // –ï—Å–ª–∏ –º—ã –¥–æ—à–ª–∏ –¥–æ —Å—é–¥–∞, –∑–Ω–∞—á–∏—Ç, —ç—Ç–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        ctx.reply('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É.', mainMenuKeyboard);
    });

    // --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
    await bot.launch();
    console.log('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω —Å –º–æ–¥—É–ª–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π!');
}

start();